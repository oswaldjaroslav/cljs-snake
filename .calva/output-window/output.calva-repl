; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+o o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Starting Jack-in Terminal: npx shadow-cljs -d cider/cider-nrepl:0.27.4 watch :app
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉shadow.user꞉>  ; Use `alt+enter` to evaluate
; Creating cljs repl session...
; Connecting cljs repl: shadow-cljs...
;   The Calva Connection Log might have more connection progress information.
; Connected session: cljs, repl: :app
; TIPS: You can choose which REPL to use (clj or cljs):
;    *Calva: Toggle REPL connection*
;    (There is a button in the status bar for this)
; Jack-in done.
cljs꞉cljs.user꞉>  ; Use `alt+enter` to evaluate
; Evaluating file: snake.cljs
; No available JS runtime.
; See https://shadow-cljs.github.io/docs/UsersGuide.html#repl-troubleshooting
nil
clj꞉cljs.user꞉> 
#'cljs-snake.state/is-move-valid?
cljs꞉cljs-snake.state꞉> 
#'cljs-snake.state/state_
cljs꞉cljs-snake.state꞉> 
{:x 1, :y 0}
cljs꞉cljs-snake.state꞉> 
#'cljs-snake.state/is-move-valid?
cljs꞉cljs-snake.state꞉> 
[1 0]
cljs꞉cljs-snake.state꞉> 
[1 0]
cljs꞉cljs-snake.state꞉> 
#'cljs-snake.state/is-move-valid?
cljs꞉cljs-snake.state꞉> 
true
cljs꞉cljs-snake.state꞉> 
true
cljs꞉cljs-snake.state꞉> 
true
cljs꞉cljs-snake.state꞉> 
true
cljs꞉cljs-snake.state꞉> 
#'cljs-snake.state/is-move-valid?
cljs꞉cljs-snake.state꞉> 
false
cljs꞉cljs-snake.state꞉> 
false
cljs꞉cljs-snake.state꞉> 
false
cljs꞉cljs-snake.state꞉> 
false
cljs꞉cljs-snake.state꞉> 
false
cljs꞉cljs-snake.state꞉> 
false
cljs꞉cljs-snake.state꞉> 
false
cljs꞉cljs-snake.state꞉> 
#'cljs-snake.state/is-move-valid?
cljs꞉cljs-snake.state꞉> 
2
cljs꞉cljs-snake.state꞉> 
2
cljs꞉cljs-snake.state꞉> 
2
cljs꞉cljs-snake.state꞉> 
2
cljs꞉cljs-snake.state꞉> 
#'cljs-snake.state/is-move-valid?
cljs꞉cljs-snake.state꞉> 
-1
cljs꞉cljs-snake.state꞉> 
#'cljs-snake.state/is-move-valid?
cljs꞉cljs-snake.state꞉> 
1
cljs꞉cljs-snake.state꞉> 
#'cljs-snake.state/is-move-valid?
cljs꞉cljs-snake.state꞉> 
2
cljs꞉cljs-snake.state꞉> 
#'cljs-snake.state/is-move-valid?
cljs꞉cljs-snake.state꞉> 
-2
cljs꞉cljs-snake.state꞉> 
#'cljs-snake.state/is-move-valid?
cljs꞉cljs-snake.state꞉> 
2
cljs꞉cljs-snake.state꞉> 
#'cljs-snake.state/is-move-valid?
cljs꞉cljs-snake.state꞉> 
0
cljs꞉cljs-snake.state꞉> 
#'cljs-snake.state/is-move-valid?
cljs꞉cljs-snake.state꞉> 
true
cljs꞉cljs-snake.state꞉> 
#'cljs-snake.state/is-move-valid?
cljs꞉cljs-snake.state꞉> 
false
cljs꞉cljs-snake.state꞉> 
false
cljs꞉cljs-snake.state꞉> 
true
cljs꞉cljs-snake.state꞉> 
